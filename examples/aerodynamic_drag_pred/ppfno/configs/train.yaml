hydra:
  run:
    # dynamic output directory according to running time and override name
    dir: hydraLog/${now:%Y-%m-%d-%H-%M-%S}-${mode}
  job:
    name: ${mode} # name of logfile
    chdir: false # keep current working direcotry unchaned
  sweep:
    # output directory for multirun
    dir: ${hydra.run.dir}
    subdir: ./

# model
model: "GNOFNOGNO_all"
radius_in: 0.035  # 0.04
radius_out: 0.035  # 0.04
embed_dim: 32  # 32
hidden_channels: [64, 64] # [64, 64]
in_channels: 2
out_channels: [1,3] # pressure + wss
fno_modes: [32, 32, 32] # [32, 32, 32]
fno_hidden_channels: 64 # 64
fno_out_channels: 64 # 64
weighted_kernel: false
max_in_points: 500000  # 500000
subsample_train: 8 # 1
subsample_eval: 1 # only set to 1 can get right Cd truth
out_keys: ["pressure","wallshearstress"]
sdf_spatial_resolution: [64, 64, 64] # or [64, 64, 64]

# data
data_module: "SAE"
n_train_num: 100000000 # 862
n_val_num: 100000000 # 1
n_test_num: 100000000 # 166
lazy_loading: true  # load all data into memory or not

# settings
enable_ddp: true
devices: [1, 2]  # python -m paddle.distributed.launch --gpus=6 gino.py
seed: 0
lr: 0.0003 # 0.0005
lr_cd: 0.01
weight_list: [20.0, 1.0] # [20.0, 1.0]
batch_size: 1
num_epochs: 1000 # 1000
finetuning_epochs: 51
mode: "train"  # train, test
state: null # '/xxx/GNOFNOGNO_all_849.pdparams'
save_per_epoch: 200
save_eval_results: true
resume_ep: -1

# inference & train DataPreprocess
process_mode: train # train, infer
pre_input_path: null # /home/chenkai26/Paddle-AeroSimOpt/data/pre_input
pre_output_path: null # /home/chenkai26/Paddle-AeroSimOpt/pre_output
bounds_dir: null # only for infer

task_id: 1

# output_dir: train_output/train_${task_id}

model_name: ${model}

# train params
train_ratio: 0.5
test_ratio: 0.5
train_input_path: null
train_output_path: null

refine_input_path: null
refine_output_path: null
